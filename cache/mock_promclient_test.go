// Code generated by MockGen. DO NOT EDIT.
// Source: cache.go

// Package cache is a generated GoMock package.
package cache

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	model "github.com/prometheus/common/model"
	reflect "reflect"
)

// Mockqueryer is a mock of queryer interface
type Mockqueryer struct {
	ctrl     *gomock.Controller
	recorder *MockqueryerMockRecorder
}

// MockqueryerMockRecorder is the mock recorder for Mockqueryer
type MockqueryerMockRecorder struct {
	mock *Mockqueryer
}

// NewMockqueryer creates a new mock instance
func NewMockqueryer(ctrl *gomock.Controller) *Mockqueryer {
	mock := &Mockqueryer{ctrl: ctrl}
	mock.recorder = &MockqueryerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *Mockqueryer) EXPECT() *MockqueryerMockRecorder {
	return m.recorder
}

// Query mocks base method
func (m *Mockqueryer) Query(ctx context.Context, query string) (model.Vector, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Query", ctx, query)
	ret0, _ := ret[0].(model.Vector)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Query indicates an expected call of Query
func (mr *MockqueryerMockRecorder) Query(ctx, query interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Query", reflect.TypeOf((*Mockqueryer)(nil).Query), ctx, query)
}
